'''
Created dec 11, 2021
last updated jan 02, 2022

@author: E1N1K0

'''
#________________________________________________________________________________
# The zen of python.
import this
#________________________________________________________________________________
# Comprension de listas: Crearlas:
# expresion   for elemento   in iterable 

def listaz(): 
    m = [n*'+' for n in range(1,5,1)] #range(inicio, final, paso): #se puede quitar *'+'
    return m

# Ejecución:
listaz()
#________________________________________________________________________________
# Comprension de listas: Ya creadas:

#a = []

# Si no hay lista usar range(inicio, final, paso):
def listaz(): 
    m = [n for n in range(1,11,2)]
    return m

# Recorrer toda la lista l:
def listaa(l): 
    for i in l:
        a.append(i**3)
    return a

# Recorrer toda la lista l:
def listab(l):
    b = [n for n in l]
    return b

# Recorrer toda la lista l (solo pares):
def listac(l):
    c = [n for n in l if n%2==0]
    return c

# Recorrer toda la lista l (solo pares y divisibles por 3):
def listad(l):
    d = [n for n in l if n%2==0 and n%3==0]
    return d

# Con else cambia:
def listae(l):
    e = [n if n%2==0 else n**2 for n in l]
    return e

# Multiplicar lista por si misma:
def listaf(l):
    f = [(x,y) for x in l for y in l]
    return f

# Ejecución:
#listaa([1,2,3,4,5,6,7,8,9])
#listab([1,2,3,4,5,6,7,8,9])
#listac([1,2,3,4,5,6,7,8,9])
#listad([1,2,3,4,5,6,7,8,9])   
#listae([1,2,3,4,5,6,7,8,9]) 
listaf([1,2,3,4,5,6,7,8,9])
#________________________________________________________________________________
#Dado un texto: genere lista de a n elementos(palabras):
def lista_n_elementos(texto):                                              # Define la funcion: Dado un texto.
    b = texto.split()                                                      # Separa
    n = 3                                                                  # Numero de elementos
    c = [b[i:i+n] for i in range(0, len(b), n)]                            # Ecuación: Genere lista de a n elementos. Puedo quiarle n si quiero que avance el segundo array desde el segundo elemento.
    return c                                                               # Devuelve: el resultado de la función.

#Ejecución:
lista_n_elementos("Hola que ac tu ahi lo ves 09 ")                         # Ejecuta: Requiere un texto.
#________________________________________________________________________________
# Separar palabras de la lista:
def sep_pal_lista(words):                                                  # Define la funcion: Dado un texto. 
    return words.split()                                                   # Devuelve: el resultado de la función: Palabras del texto, separadas.

# Ejecución: 
sep_pal_lista("Hola ola ula 1")                                            # Ejecuta: Requiere un texto.
#________________________________________________________________________________
#Descomponer cadena (de texto) en lista a en n caracteres por elemento:
def entero(texto, n):                                                      # Define la funcion: Dado un texto y n caracteres por elemento.
    separa = [texto[i:i+n] for i in range(0, len(texto), n)]               # Ecuación: Separa el texto en n caracteres por elemento. Incluye espacios!
    return separa                                                          # Devuelve: el resultado de la ecuacion separa.

# Ejecución:
entero('Ingresa cadena (texto) a separar: ', 5)                            # Ejecuta: Requiere un texto.
#________________________________________________________________________________
# Determinar si hay numeros o determinar la cantidad de numeros en un texto:
def cuantos_hay(words: str):                                               # Define la funcion: Dado un texto.
    b = [i for i in words.split() if i.isnumeric() == True]                # Genera lista si hay numeros dentro del texto. 
    print('Hay ',len(b),' numeros.', sep='')                               # Ecuación: Cuenta cantidad de numeros en el texto (con len).
    return False if len(b) == 0 else True                                  # Devuelve: el resultado de la función: Si es vacio (no identifica numeros) es False.

# Ejecución:
cuantos_hay("He jo ki 99 lo 83 hola j98p")                                 # Ejecuta: Requiere un texto.
#________________________________________________________________________________
# Detectar que cada caracter sea digito o letra:
def que_es(text: str):
    a = ['es digit o alpha' if i.isdigit() == True or i.isalpha() == True else 'No es digit o alpha' for i in text]    #'es digit o alpha' se puede cambiar por True
    return a

# Ejecución:
que_es('ab12?=')
#________________________________________________________________________________
# Probabilidades Normales: ok

import scipy.stats as st
st.norm.ppf(.95)                                                          # = 1.6448536269514722
#st.norm.cdf(1.64)                                                        # 0.94949741652589625
#________________________________________________________________________________
